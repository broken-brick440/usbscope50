/*
 * This file is part of USBscope50 Software.
 *
 *   USBscope50 Software is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   any later version.
 *
 *   USBscope50 Software is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   A copy of the GNU General Public License should be included
 *   along with USBscope50 Software.  If not, see <http://www.gnu.org/licenses/>.
 *
 * 
 */


package usbscope50software;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author  ana
 */
public class TutorialDemo extends javax.swing.JFrame {
    
    ImageIcon ElanLogo = new ImageIcon(getClass().getResource("/usbscope50software/Images/elan-logo.jpg"));
    ImageIcon AKIPLogo = new ImageIcon(getClass().getResource("/usbscope50software/Images/AKIP-logo.jpg"));
    String Cr = System.getProperty("line.separator");
    /** Creates new form Tutorial */
    public TutorialDemo() {
        
        initComponents();
        setLocation(0,0);                            //put form on the centre of the screen
        KeyStroke escape = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0,false);
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(escape, "ESCAPE");
        getRootPane().getActionMap().put("ESCAPE", escapeAction);
        TutorialClose.grabFocus();
        
    }
    
    
     Action escapeAction = new AbstractAction() {

        public void actionPerformed(ActionEvent e) {
            dispose();
        }
    };
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextArea1.setCaretPosition(0);
        TutorialClose = new javax.swing.JButton();

        setTitle("USBscope50 Tutorial Import/Export Graph Data");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(4);
        jTextArea1.setText("\tHi. " + Cr + Cr +
            "\t" + USBscope50_Main.productID + " Turorial is provided to help you " + Cr +
            "\tstart using and enjoying " + USBscope50_Main.companyID + "s USB scope quickly." + Cr + Cr +
            "\tThis tutorial will show you how to import graphs " + Cr + 
            "\tand how to get some signals moving even in Demo Mode." + Cr + Cr +
            "\tThis software should have neem dostributed with 3 text files:" + Cr +
            "\tsin.txt, squate.txt, trian.txt." + Cr + Cr +
            "\tClick on Edit Menu -> Import Graph Data and select sin.txt" + Cr +
            "\tfile to import. You should see a sin wave displayed on the screen." + Cr + Cr +
            "\tSelect tab labeled Ch1 on the screen. Move right or left" + Cr +
            "\tarrow buttons to change time base setting." + Cr +
            "\tBy moving up or down arrows you set vots per division." + Cr +
            "\tVolts per division setting is displayed on top of the graph." + Cr + Cr +
            "\tEither select Run->Run menu option or click on shortcut button" + Cr +
            "\tRun in the toolbar. You should observe sin wave move." + Cr + Cr +
            "\tHave a look at the sin.txt and its structure. To generate such a " + Cr +
            "\ttext file just select Edit -> Export Graph Data and displayed graph" + Cr +
            "\tdata points will be saved in a text format." + Cr + Cr +
            "\tHope you enjoy using " + USBscope50_Main.productID + "." + Cr + Cr + "\t" + USBscope50_Main.companyID);
        jTextArea1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTextArea1.setFocusable(false);
        jScrollPane1.setViewportView(jTextArea1);

        TutorialClose.setText("CLOSE");
        TutorialClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TutorialCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addComponent(TutorialClose, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TutorialClose))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TutorialCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TutorialCloseActionPerformed
        USBscope50_Main.TutorialDemoDisplayed = false;        
        this.setVisible(false);
}//GEN-LAST:event_TutorialCloseActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (USBscope50_Main.companyID.equals("PRIST")){
            this.setIconImage(AKIPLogo.getImage());
        }else{
            this.setIconImage(ElanLogo.getImage());
        }
        jTextArea1.setCaretPosition(0);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
               
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        USBscope50_Main.TutorialDemoDisplayed = false;
        
    }//GEN-LAST:event_formWindowClosing
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {                
                new Tutorial().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TutorialClose;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
}
